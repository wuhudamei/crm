<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	     http://www.springframework.org/schema/context
	     http://www.springframework.org/schema/context/spring-context-4.0.xsd
	     http://www.springframework.org/schema/cache
	     http://www.springframework.org/schema/cache/spring-cache.xsd
	     http://www.springframework.org/schema/task
         http://www.springframework.org/schema/task/spring-task-4.0.xsd"
       default-lazy-init="true">

  <context:property-placeholder ignore-unresolvable="true"
                                location="classpath*:/application.properties" file-encoding="UTF-8"/>

  <!-- 扫描rocoinfo包下的所有类 -->
  <context:component-scan base-package="com.rocoinfo.*"/>

  <!-- 引入其他配置文件 -->
  <import resource="applicationContext-mybatis.xml"/>
  <import resource="shiro/applicationContext-shiro.xml"/>
  
  <!-- 扫描basePackage下所有接口-->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.rocoinfo.repository"/>
  </bean>

     <!-- Redis配置 -->
    <bean id="jedisTemplate" class="com.rocoinfo.redis.JedisTemplate">
        <constructor-arg ref="jedisPool"/>
    </bean>
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${redis.host}"/>
        <constructor-arg index="2" value="${redis.port}"/>
        <constructor-arg index="3" value="${redis.timeout}"/>
        <constructor-arg index="4" value="${redis.password}" />
        <constructor-arg index="5" value="${redis.database}" />
    </bean>
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWait}" />
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}"/>
    </bean>


    <!-- Spring Cache Redis配置 -->
    <cache:annotation-driven cache-manager="redisCacheManager"/>
    <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg index="0" ref="redisTemplate"/>
        <property name="defaultExpiration" value="120"/>
    </bean>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory">
            <bean class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
                <property name="hostName" value="${redis.host}"/>
                <property name="port" value="${redis.port}"/>
                <property name="database" value="${redis.database}"/>
                <property name="password" value="${redis.password}"/>
            </bean>
        </property>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
    </bean>
    
  <!-- 启用spring Task-->
  <!-- 配置执行任务线性池 -->
  <task:executor id="executor" pool-size="3"/>
  <!-- 配置任务调度线程池-->
  <task:scheduler id="scheduler" pool-size="3"/>
  <!-- 启用annotation方式 -->
  <task:annotation-driven scheduler="scheduler"
                          executor="executor" proxy-target-class="true"/>
   <task:scheduled-tasks>
       <task:scheduled ref="initEmployeeInfo" method="executor" cron="0 0 0 * * ?"/>
       <task:scheduled ref="scheduleRemind" method="executor" cron="0 0 9 * * ?"/>
       <task:scheduled ref="syncOrderInfoSchedule" method="executor" cron="0 0/15 * * * ?"/>
   </task:scheduled-tasks>
</beans>